/*!*****************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!../gaiaprotocol-style/lib/reset.css ***!
  \*****************************************************************************************************************/
/***
    The new CSS reset - version 1.11.2 (last updated 15.11.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
    - The "html" element is excluded, otherwise a bug in Chrome breaks the CSS hyphens property (https://github.com/elad2412/the-new-css-reset/issues/36)
 */
 *:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *, w3m-modal)) {
    all: unset;
    display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Fix mobile Safari increase font-size on landscape mode */
html {
    -moz-text-size-adjust: none;
    -webkit-text-size-adjust: none;
    text-size-adjust: none;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
    cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu, summary {
    list-style: none;
}

/* For images to not be able to exceed their container */
img {
    max-inline-size: 100%;
    max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
    border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
    -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
    white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
    -webkit-appearance: revert;
    appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
    all: revert;
    box-sizing: border-box;
}

/* reset default text opacity of input placeholder */
::placeholder {
    color: unset;
}

/* fix the feature of 'hidden' attribute.
   display:revert; revert to element instead of attribute */
:where([hidden]) {
    display: none;
}

/* revert for bug in Chromium browsers
   - fix for the content editable attribute will work properly.
   - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
    -moz-user-modify: read-write;
    -webkit-user-modify: read-write;
    overflow-wrap: break-word;
    -webkit-line-break: after-white-space;
    -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
    -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
    all: revert;
    box-sizing: border-box;
}

/* Remove details summary webkit styles */
::-webkit-details-marker {
    display: none;
}
/*!*********************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[1].use[1]!./node_modules/less-loader/dist/cjs.js!./public/style/main.less ***!
  \*********************************************************************************************************************************************/
@font-face {
  font-family: Söhne;
  src: url(/fonts/soehne.woff2) format("woff2");
  font-weight: 400;
  font-display: swap;
}
@font-face {
  font-family: Söhne;
  src: url(/fonts/soehne-bold.woff2) format("woff2");
  font-weight: 700;
  font-display: swap;
}
@keyframes rotate-material-loading-spinner {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(270deg);
  }
}
@keyframes rotate-material-loading-spinner-dash {
  0% {
    stroke-dashoffset: 187;
  }
  50% {
    stroke-dashoffset: 46.75;
    transform: rotate(135deg);
  }
  100% {
    stroke-dashoffset: 187;
    transform: rotate(450deg);
  }
}
.material-loading-spinner {
  display: flex;
}
.material-loading-spinner > svg {
  animation: rotate-material-loading-spinner 1.4s linear infinite;
}
.material-loading-spinner > svg > circle {
  stroke-dasharray: 187;
  stroke-dashoffset: 0;
  transform-origin: center;
  animation: rotate-material-loading-spinner-dash 1.4s ease-in-out infinite;
  stroke: var(--loading-spinner-color);
}
button.contained .material-loading-spinner > svg > circle {
  stroke: var(--loading-spinner-on-contained-button-color);
}
:root {
  --line-color: #333333;
  --page-bg-color: #000;
  --paragraph-text-color: #fff;
  --placeholder-color: rgba(255, 255, 255, 0.5);
  --overlay-color: rgba(34, 34, 34, 0.6);
  --modal-bg-color: #171717;
  --text-button-text-color: #fff;
  --text-button-hover-bg-color: rgba(255, 255, 255, 0.08);
  --contained-button-bg-color: #fff;
  --contained-button-text-color: #000;
  --contained-button-hover-bg-color: #e9e9e9;
  --outlined-button-border-color: var(--line-color);
  --outlined-button-bg-color: transparent;
  --outlined-button-text-color: #fff;
  --outlined-button-hover-border-color: var(--line-color);
  --outlined-button-hover-bg-color: rgba(255, 255, 255, 0.08);
  --input-border-color: #4e4e4e;
  --input-hover-border-color: #8c8c8c;
  --input-focus-border-color: #e3e3e3;
  --loading-spinner-color: #fff;
  --loading-spinner-on-contained-button-color: #000;
}
@keyframes fade-in {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
@keyframes fade-out {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
*,
*::before,
*::after {
  -webkit-tap-highlight-color: transparent;
}
:root {
  background-color: var(--page-bg-color);
}
body {
  color: var(--paragraph-text-color);
  font-family: Söhne;
  font-size: 16px;
  font-smoothing: antialiased;
  -webkit-font-smoothing: antialiased;
}
p {
  line-height: 1.5;
  word-break: break-word;
}
a {
  cursor: pointer;
}
dialog {
  border: none;
  outline: none;
  padding: 0;
}
::placeholder {
  color: var(--placeholder-color);
}
button {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  cursor: pointer;
  padding: 8px 22px;
  min-height: 40px;
  font-size: 15px;
  transition: background-color 0.2s linear;
  border-radius: 9999px;
}
@container (width <= 520px) {
  button {
    padding: 8px 16px;
  }
}
button > .icon {
  flex-shrink: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
}
button > .icon > img {
  width: 36px;
  height: 36px;
  border-radius: 50%;
}
button.disabled {
  cursor: not-allowed;
  filter: grayscale(1);
}
button.text {
  background-color: transparent;
  color: var(--text-button-text-color);
}
@media (pointer: fine) {
  button.text:hover:not(.disabled) {
    background-color: var(--text-button-hover-bg-color);
  }
}
button.text:active:not(.disabled) {
  background-color: var(--text-button-hover-bg-color);
}
button.contained {
  background-color: var(--contained-button-bg-color);
  color: var(--contained-button-text-color);
}
@media (pointer: fine) {
  button.contained:hover {
    background-color: var(--contained-button-hover-bg-color);
  }
}
button.contained:active {
  background-color: var(--contained-button-hover-bg-color);
}
button.outlined {
  border: 1px solid var(--outlined-button-border-color);
  background-color: var(--outlined-button-bg-color);
  color: var(--outlined-button-text-color);
}
@media (pointer: fine) {
  button.outlined:hover:not(.disabled) {
    border-color: var(--outlined-button-hover-border-color);
    background-color: var(--outlined-button-hover-bg-color);
  }
}
button.outlined:active:not(.disabled) {
  border-color: var(--outlined-button-hover-border-color);
  background-color: var(--outlined-button-hover-bg-color);
}
.button-group {
  display: flex;
  flex-direction: column;
}
.button-group > button {
  margin-bottom: -1px;
  border-radius: 0;
  justify-content: start;
}
.button-group > button:first-child {
  border-top-left-radius: 16px;
  border-top-right-radius: 16px;
}
.button-group > button:last-child {
  margin-bottom: 0;
  border-bottom-left-radius: 16px;
  border-bottom-right-radius: 16px;
}
.form {
  display: flex;
  flex-direction: column;
  gap: 34px;
}
.input {
  display: flex;
  flex-direction: column;
  gap: 9px;
}
.input.required > .label::after {
  content: '*';
  margin-left: 3px;
}
.input > .label {
  font-size: 15.14px;
}
.input > input {
  width: 100%;
  height: 40px;
  padding: 0 13.5px;
  border: 1px solid var(--input-border-color);
  border-radius: 4.5px;
}
.input > input:focus {
  border-color: var(--input-focus-border-color);
}
.input > input:hover {
  border-color: var(--input-hover-border-color);
}
.select {
  display: flex;
  flex-direction: column;
  gap: 9px;
}
.select.required > .label::after {
  content: '*';
  margin-left: 3px;
}
.select > .label {
  font-size: 15.14px;
}
.select > select {
  display: flex;
  align-items: center;
  width: 100%;
  height: 40px;
  padding: 0 13.5px;
  border: 1px solid var(--input-border-color);
  border-radius: 4.5px;
}
.select > select:focus {
  border-color: var(--input-focus-border-color);
}
.select > select:hover {
  border-color: var(--input-hover-border-color);
}
dialog.modal {
  width: 90%;
  max-width: 600px;
  border-radius: 8px;
  background-color: var(--modal-bg-color);
  color: var(--paragraph-text-color);
  animation: fade-in 0.3s ease-out;
  container-type: inline-size;
}
dialog.modal::backdrop {
  backdrop-filter: blur(50px);
  background-color: var(--overlay-color);
  animation: fade-in 0.3s ease-out;
}
dialog.modal:not([open]) {
  display: none !important;
}
dialog.modal.structured-modal {
  display: flex;
  flex-direction: column;
}
dialog.modal.structured-modal > header {
  flex-shrink: 0;
  padding: 34px;
  font-size: 26px;
}
@container (width <= 520px) {
  dialog.modal.structured-modal > header {
    font-size: 22px;
  }
}
dialog.modal.structured-modal > main {
  overflow-y: auto;
  flex-grow: 1;
  padding: 0 34px;
}
dialog.modal.structured-modal > footer {
  flex-shrink: 0;
  padding: 24px 34px;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  gap: 16px;
}
.wallet-connection-content {
  display: flex;
  flex-direction: column;
  gap: 32px;
}
@container (width <= 520px) {
  .wallet-connection-content {
    padding: 0 24px !important;
  }
}
.wallet-connection-content > section {
  display: flex;
  flex-direction: column;
  gap: 16px;
}
.wallet-connection-content > section > h2 {
  font-size: 22px;
}
@container (width <= 520px) {
  .wallet-connection-content > section > h2 {
    font-size: 18px;
  }
}
@container (width <= 520px) {
  .wallet-connection-popup > header {
    padding: 34px 24px !important;
  }
}
@container (width <= 520px) {
  .wallet-connection-popup > footer {
    padding: 24px !important;
  }
}
.wallet-login-content {
  display: flex;
  flex-direction: column;
  gap: 32px;
}
@container (width <= 520px) {
  .wallet-login-content {
    padding: 0 24px !important;
  }
}
.wallet-login-content > section {
  display: flex;
  flex-direction: column;
  gap: 16px;
}
.wallet-login-content > section > h2 {
  font-size: 22px;
}
@container (width <= 520px) {
  .wallet-login-content > section > h2 {
    font-size: 18px;
  }
}
@container (width <= 520px) {
  .wallet-login-popup > header {
    padding: 34px 24px !important;
  }
}
@container (width <= 520px) {
  .wallet-login-popup > footer {
    padding: 24px !important;
  }
}

